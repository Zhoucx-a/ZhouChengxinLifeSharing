<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lifeSharing.mapper.StoryReplyMapper" >
  <resultMap id="BaseResultMap" type="com.lifeSharing.pojo.StoryReply" >
    <id column="reply_code" property="replyCode" jdbcType="VARCHAR" />
    <result column="comments_code" property="commentsCode" jdbcType="VARCHAR" />
    <result column="reply_to_id" property="replyToId" jdbcType="VARCHAR" />
    <result column="replier_no" property="replierNo" jdbcType="VARCHAR" />
    <result column="replier_name" property="replierName" jdbcType="VARCHAR" />
    <result column="reply_type" property="replyType" jdbcType="VARCHAR" />
    <result column="to_id" property="toId" jdbcType="VARCHAR" />
    <result column="to_name" property="toName" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.lifeSharing.pojo.StoryReply" extends="BaseResultMap" >
    <result column="reply_context" property="replyContext" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    reply_code, comments_code, reply_to_id, replier_no, replier_name, reply_type, to_id, 
    to_name
  </sql>
  <sql id="Blob_Column_List" >
    reply_context
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.lifeSharing.pojo.StoryReplyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from story_reply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lifeSharing.pojo.StoryReplyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from story_reply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from story_reply
    where reply_code = #{replyCode,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from story_reply
    where reply_code = #{replyCode,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.lifeSharing.pojo.StoryReplyExample" >
    delete from story_reply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lifeSharing.pojo.StoryReply" >
    insert into story_reply (reply_code, comments_code, reply_to_id, 
      replier_no, replier_name, reply_type, 
      to_id, to_name, reply_context
      )
    values (#{replyCode,jdbcType=VARCHAR}, #{commentsCode,jdbcType=VARCHAR}, #{replyToId,jdbcType=VARCHAR}, 
      #{replierNo,jdbcType=VARCHAR}, #{replierName,jdbcType=VARCHAR}, #{replyType,jdbcType=VARCHAR}, 
      #{toId,jdbcType=VARCHAR}, #{toName,jdbcType=VARCHAR}, #{replyContext,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lifeSharing.pojo.StoryReply" >
    insert into story_reply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="replyCode != null" >
        reply_code,
      </if>
      <if test="commentsCode != null" >
        comments_code,
      </if>
      <if test="replyToId != null" >
        reply_to_id,
      </if>
      <if test="replierNo != null" >
        replier_no,
      </if>
      <if test="replierName != null" >
        replier_name,
      </if>
      <if test="replyType != null" >
        reply_type,
      </if>
      <if test="toId != null" >
        to_id,
      </if>
      <if test="toName != null" >
        to_name,
      </if>
      <if test="replyContext != null" >
        reply_context,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="replyCode != null" >
        #{replyCode,jdbcType=VARCHAR},
      </if>
      <if test="commentsCode != null" >
        #{commentsCode,jdbcType=VARCHAR},
      </if>
      <if test="replyToId != null" >
        #{replyToId,jdbcType=VARCHAR},
      </if>
      <if test="replierNo != null" >
        #{replierNo,jdbcType=VARCHAR},
      </if>
      <if test="replierName != null" >
        #{replierName,jdbcType=VARCHAR},
      </if>
      <if test="replyType != null" >
        #{replyType,jdbcType=VARCHAR},
      </if>
      <if test="toId != null" >
        #{toId,jdbcType=VARCHAR},
      </if>
      <if test="toName != null" >
        #{toName,jdbcType=VARCHAR},
      </if>
      <if test="replyContext != null" >
        #{replyContext,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lifeSharing.pojo.StoryReplyExample" resultType="java.lang.Integer" >
    select count(*) from story_reply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update story_reply
    <set >
      <if test="record.replyCode != null" >
        reply_code = #{record.replyCode,jdbcType=VARCHAR},
      </if>
      <if test="record.commentsCode != null" >
        comments_code = #{record.commentsCode,jdbcType=VARCHAR},
      </if>
      <if test="record.replyToId != null" >
        reply_to_id = #{record.replyToId,jdbcType=VARCHAR},
      </if>
      <if test="record.replierNo != null" >
        replier_no = #{record.replierNo,jdbcType=VARCHAR},
      </if>
      <if test="record.replierName != null" >
        replier_name = #{record.replierName,jdbcType=VARCHAR},
      </if>
      <if test="record.replyType != null" >
        reply_type = #{record.replyType,jdbcType=VARCHAR},
      </if>
      <if test="record.toId != null" >
        to_id = #{record.toId,jdbcType=VARCHAR},
      </if>
      <if test="record.toName != null" >
        to_name = #{record.toName,jdbcType=VARCHAR},
      </if>
      <if test="record.replyContext != null" >
        reply_context = #{record.replyContext,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update story_reply
    set reply_code = #{record.replyCode,jdbcType=VARCHAR},
      comments_code = #{record.commentsCode,jdbcType=VARCHAR},
      reply_to_id = #{record.replyToId,jdbcType=VARCHAR},
      replier_no = #{record.replierNo,jdbcType=VARCHAR},
      replier_name = #{record.replierName,jdbcType=VARCHAR},
      reply_type = #{record.replyType,jdbcType=VARCHAR},
      to_id = #{record.toId,jdbcType=VARCHAR},
      to_name = #{record.toName,jdbcType=VARCHAR},
      reply_context = #{record.replyContext,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update story_reply
    set reply_code = #{record.replyCode,jdbcType=VARCHAR},
      comments_code = #{record.commentsCode,jdbcType=VARCHAR},
      reply_to_id = #{record.replyToId,jdbcType=VARCHAR},
      replier_no = #{record.replierNo,jdbcType=VARCHAR},
      replier_name = #{record.replierName,jdbcType=VARCHAR},
      reply_type = #{record.replyType,jdbcType=VARCHAR},
      to_id = #{record.toId,jdbcType=VARCHAR},
      to_name = #{record.toName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lifeSharing.pojo.StoryReply" >
    update story_reply
    <set >
      <if test="commentsCode != null" >
        comments_code = #{commentsCode,jdbcType=VARCHAR},
      </if>
      <if test="replyToId != null" >
        reply_to_id = #{replyToId,jdbcType=VARCHAR},
      </if>
      <if test="replierNo != null" >
        replier_no = #{replierNo,jdbcType=VARCHAR},
      </if>
      <if test="replierName != null" >
        replier_name = #{replierName,jdbcType=VARCHAR},
      </if>
      <if test="replyType != null" >
        reply_type = #{replyType,jdbcType=VARCHAR},
      </if>
      <if test="toId != null" >
        to_id = #{toId,jdbcType=VARCHAR},
      </if>
      <if test="toName != null" >
        to_name = #{toName,jdbcType=VARCHAR},
      </if>
      <if test="replyContext != null" >
        reply_context = #{replyContext,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where reply_code = #{replyCode,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lifeSharing.pojo.StoryReply" >
    update story_reply
    set comments_code = #{commentsCode,jdbcType=VARCHAR},
      reply_to_id = #{replyToId,jdbcType=VARCHAR},
      replier_no = #{replierNo,jdbcType=VARCHAR},
      replier_name = #{replierName,jdbcType=VARCHAR},
      reply_type = #{replyType,jdbcType=VARCHAR},
      to_id = #{toId,jdbcType=VARCHAR},
      to_name = #{toName,jdbcType=VARCHAR},
      reply_context = #{replyContext,jdbcType=LONGVARCHAR}
    where reply_code = #{replyCode,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lifeSharing.pojo.StoryReply" >
    update story_reply
    set comments_code = #{commentsCode,jdbcType=VARCHAR},
      reply_to_id = #{replyToId,jdbcType=VARCHAR},
      replier_no = #{replierNo,jdbcType=VARCHAR},
      replier_name = #{replierName,jdbcType=VARCHAR},
      reply_type = #{replyType,jdbcType=VARCHAR},
      to_id = #{toId,jdbcType=VARCHAR},
      to_name = #{toName,jdbcType=VARCHAR}
    where reply_code = #{replyCode,jdbcType=VARCHAR}
  </update>
</mapper>